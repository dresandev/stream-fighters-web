---
import TicketIcon from "@/components/icons/ticket-icon.astro"
import StarIcon from "@/components/icons/star-icon.astro"
---

<header class="header">
  <div class="content">
    <a class="home-link" href="/" aria-label="Ir al inicio">
      <img
        src="/images/logos/stream-fighters-4-logo.svg"
        alt="Logo de stream fighter 4"
        width="53"
        height="30"
        fetchpriority="high"
      />
    </a>

    <div id="menu" class="menu">
      <nav class="nav">
        <a class="link" href="#">Combates</a>
        <a class="link" href="#">Pronósticos</a>
      </nav>

      <a
        href="https://www.taquillalive.com/book-performance/?artist=stream-fighters&event=TCL.EVN885.PRF1"
        target="_blank"
        rel="noopener noreferrer"
        class="link cta"
        title="Comprar entradas para Stream Fighters 4"
      >
        <StarIcon size={10} class="star-icon" />
        <TicketIcon class="ticket-icon" />
        Comprar entradas
      </a>
    </div>

    <button id="menu-mobile-button" class="menu-button" type="button" aria-label="Abrir menú">
      <span class="line"></span>
      <span class="line"></span>
    </button>
  </div>
</header>

<script>
  import { $ } from "@/utils/dom-selector"

  const $header = $(".header")!
  const $mobileButton = $("#menu-mobile-button")!
  const $mobileMenu = $("#menu")!

  const headerBlockSize = 60
  let lastKnownScrollY = 0
  let ticking = false

  function handleOnScroll() {
    lastKnownScrollY = window.scrollY

    if (!ticking) {
      const scrolled = lastKnownScrollY > headerBlockSize

      requestAnimationFrame(() => {
        $header.toggleAttribute("data-scrolled", scrolled)
        ticking = false
      })

      ticking = true
    }
  }

  function handleToggleMenu() {
    const currentState = $mobileButton.dataset.state
    const isOpen = currentState === "open"
    const newState = isOpen ? "closed" : "open"

    document.body.toggleAttribute("data-scroll-locked", !isOpen)
    $mobileButton.ariaLabel = `${currentState === "open" ? "Cerrar" : "Abrir"} menú`
    $mobileButton.setAttribute("data-state", newState)
    $mobileMenu.setAttribute("data-state", newState)
  }

  window.addEventListener("scroll", handleOnScroll)
  $mobileButton.addEventListener("click", handleToggleMenu)
</script>

<style>
  .header {
    --header-block-size: 60px;
    --border-color: transparent;
    position: fixed;
    inset-inline: 0;
    z-index: 10;
    display: flex;
    align-items: center;
    padding-inline: 32px;
    block-size: var(--header-block-size);
    border-block-end: 1px solid var(--border-color);
    transition-property: background-color, backdrop-filter, border-block-end-color;
    transition-duration: 150ms;
  }

  .header[data-scrolled] {
    --border-color: hsl(0 0% 99% / 0.1);
    background-color: hsl(var(--color-background-hsl) / 0.8);
    backdrop-filter: saturate(180%) blur(5px);
  }

  .nav {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .link {
    font-family: var(--primary-font);
    font-size: 24px;
    font-weight: 500;
    inline-size: fit-content;
    letter-spacing: 1px;
    position: relative;
  }

  .link::before {
    content: "";
    position: absolute;
    inset-block-end: 0;
    block-size: 1px;
    inline-size: 100%;
    background-color: currentColor;
    mask-image: linear-gradient(to right, black 50%, transparent 100%);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 250ms;
    will-change: transform;
  }

  .link:is(:hover, :focus-visible)::before {
    transform: scaleX(1);
  }

  .ticket-icon {
    position: absolute;
    inset-block: 0;
    inset-inline-end: -28px;
    block-size: max-content;
    margin-block: auto;
  }

  .star-icon {
    position: absolute;
    inset-inline-start: -10px;
    inset-block-start: -2px;
    animation: blink 2s infinite linear;
  }

  .home-link {
    transition: opacity 200ms;
  }

  .home-link:hover {
    opacity: 0.6;
  }

  @media screen and (max-width: 768px) {
    .header {
      padding-inline: var(--app-padding);
    }

    .content {
      display: flex;
      inline-size: 100%;
      justify-content: space-between;
    }

    .menu-button {
      --size: 32px;
      -webkit-tap-highlight-color: transparent;
      display: grid;
      align-content: center;
      justify-items: center;
      row-gap: 8px;
      block-size: var(--size);
      inline-size: var(--size);
      padding-inline: 0;
      background-color: transparent;
    }

    .menu-button > .line {
      block-size: 3px;
      inline-size: 80%;
      background-color: currentColor;
      border-radius: 2px;
      transform-origin: 7px;
      transition: transform 200ms cubic-bezier(0.68, -0.55, 0.27, 1.55);
    }

    .menu-button[data-state="open"] > .line:first-of-type {
      transform: rotateZ(45deg) translate(2px);
    }

    .menu-button[data-state="open"] > .line:last-of-type {
      transform: rotateZ(-45deg) translate(2px);
    }

    .menu {
      position: fixed;
      inset: var(--header-block-size) 0 0 0;
      display: flex;
      flex-direction: column;
      gap: 16px;
      block-size: calc(100dvh - var(--header-block-size));
      padding: 24px;
      background: url("/images/shapes/form-shape.svg") bottom no-repeat var(--background-color);
      background-size: 100% auto;
      overflow: hidden auto;
      scrollbar-width: thin;
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition:
        transform 100ms,
        opacity 100ms cubic-bezier(0, 0, 0.25, 1),
        visibility 0s linear 100ms;
    }

    .menu[data-state="open"] {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
      transition:
        transform 200ms,
        opacity 0.2ms cubic-bezier(0, 0, 0.25, 1),
        visibility 0ms;
    }
  }

  @media screen and (min-width: 769px) {
    .menu-button {
      display: none;
    }

    .content {
      display: flex;
      column-gap: 32px;
      margin-inline: auto;
      inline-size: min(100%, 1200px);
    }

    .menu {
      display: flex;
      column-gap: 16px;
      inline-size: 100%;
    }

    .nav {
      flex-direction: row;
    }

    .link {
      font-size: 20px;
    }

    .link.cta {
      margin-inline-start: auto;
    }

    .ticket-icon {
      opacity: 0;
      transition: opacity 250ms;
    }

    .link:is(:hover, :focus-visible) > .ticket-icon {
      opacity: 1;
    }
  }

  @keyframes blink {
    50% {
      opacity: 0.5;
    }
  }
</style>
